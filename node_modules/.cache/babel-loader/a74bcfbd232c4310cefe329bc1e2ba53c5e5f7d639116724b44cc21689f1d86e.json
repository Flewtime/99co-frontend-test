{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar jsxRuntime = require('react/jsx-runtime');\nvar Controller = require('../../modules/Controller.js');\nvar Manager = require('../../modules/Manager.js');\nvar composeCssClasses = require('../../utils/composeCssClasses.js');\nvar index_module = require('./index.module.css.js');\nfunction Nav(_ref) {\n  let {\n    color,\n    activeColor,\n    position = {\n      bottom: '1.5rem',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    }\n  } = _ref;\n  const {\n    state: {\n      slides,\n      totalSlides\n    }\n  } = Manager.useManager();\n  const {\n    state: {\n      activeSlide\n    },\n    changeSlide\n  } = Controller.useController();\n  function renderButtons() {\n    if (!totalSlides) return [];\n    const onClickHandler = slideNumber => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n    return Array.from(slides.values()).map(_ref2 => {\n      let {\n        number\n      } = _ref2;\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        jsxRuntime.jsx(\"li\", {\n          className: composeCssClasses.composeCssClasses('hero-slider-nav-button', index_module[\"default\"].Button, {\n            className: index_module[\"default\"].Active,\n            useIf: activeSlide === number\n          }),\n          onClick: () => onClickHandler(number)\n        }, number)\n      );\n    });\n  }\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n  return jsxRuntime.jsx(\"ul\", Object.assign({\n    className: composeCssClasses.composeCssClasses('hero-slider-nav-wrapper', index_module[\"default\"].Wrapper),\n    style: Object.assign(Object.assign({}, position), CSSVariables)\n  }, {\n    children: renderButtons()\n  }));\n}\nNav.displayName = 'hero-slider/nav';\nexports.Nav = Nav;","map":{"version":3,"names":["Nav","_ref","color","activeColor","position","bottom","left","transform","state","slides","totalSlides","Manager","useManager","activeSlide","changeSlide","Controller","useController","renderButtons","onClickHandler","slideNumber","Array","from","values","map","_ref2","number","jsxRuntime","jsx","className","composeCssClasses","index_module","Button","Active","useIf","onClick","CSSVariables","Object","assign","Wrapper","style","children","displayName"],"sources":["D:\\cv\\Website-Porto\\99co-frontend-test\\node_modules\\hero-slider\\src\\components\\Nav\\index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useController } from '../../modules/Controller';\nimport { useManager } from '../../modules/Manager';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\nimport NavModuleCss from './index.module.css';\n\n/**\n * Defines the position of the navigation component.\n */\nexport interface NavPosition {\n  top?: React.CSSProperties['top'];\n  left?: React.CSSProperties['left'];\n  bottom?: React.CSSProperties['bottom'];\n  right?: React.CSSProperties['right'];\n  transform?: React.CSSProperties['transform'];\n}\n\n/**\n * `Nav` component props.\n */\nexport interface NavProps {\n  /**\n   * Object of CSS properties `top`, `left`, `bottom`, and `right` used to absolutely position elements.\n   * Aside from the former, you can also set the CSS `transform` property to help you center the element.\n   * @default\n   * {\n   *    bottom: '1.5rem',\n   *    left: '50%',\n   *    transform: 'translateX(-50%)'\n   * }\n   */\n  position?: NavPosition;\n  /**\n   * Defines `--nav-color` CSS variable.\n   */\n  color?: string;\n  /**\n   * Defines `--nav-active-color` CSS variable.\n   */\n  activeColor?: string;\n}\n\nexport function Nav({\n  color,\n  activeColor,\n  position = {\n    bottom: '1.5rem',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  }\n}: NavProps) {\n  const {\n    state: { slides, totalSlides }\n  } = useManager();\n\n  const {\n    state: { activeSlide },\n    changeSlide\n  } = useController();\n\n  function renderButtons() {\n    if (!totalSlides) return [];\n\n    const onClickHandler = (slideNumber: number) => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n\n    return Array.from(slides.values()).map(({ number }) => {\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        <li\n          key={number}\n          className={composeCssClasses(\n            'hero-slider-nav-button',\n            NavModuleCss.Button,\n            { className: NavModuleCss.Active, useIf: activeSlide === number }\n          )}\n          onClick={() => onClickHandler(number)}\n        />\n      );\n    });\n  }\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n\n  return (\n    <ul\n      className={composeCssClasses(\n        'hero-slider-nav-wrapper',\n        NavModuleCss.Wrapper\n      )}\n      style={{\n        ...position,\n        ...CSSVariables\n      }}\n    >\n      {renderButtons()}\n    </ul>\n  );\n}\n\n(Nav as React.FunctionComponent).displayName = 'hero-slider/nav';\n"],"mappings":";;;;;;;;;;AA2CM,SAAUA,GAAGA,CAAAC,IAAA,EAQR;EAAA,IARS;IAClBC,KAAK;IACLC,WAAW;IACXC,QAAQ,GAAG;MACTC,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE;;EACZ,CACQ,GAAAN,IAAA;EACT,MAAM;IACJO,KAAK,EAAE;MAAEC,MAAM;MAAEC;IAAW;EAAE,CAC/B,GAAGC,OAAA,CAAAC,UAAU,EAAE;EAEhB,MAAM;IACJJ,KAAK,EAAE;MAAEK;IAAW,CAAE;IACtBC;EAAW,CACZ,GAAGC,UAAA,CAAAC,aAAa,EAAE;EAEnB,SAASC,aAAaA,CAAA;IACpB,IAAI,CAACP,WAAW,EAAE,OAAO,EAAE;IAE3B,MAAMQ,cAAc,GAAIC,WAAmB,IAAI;MAC7C,IAAIA,WAAW,KAAKN,WAAW,EAAEC,WAAW,CAACK,WAAW,CAAC;IAC3D,CAAC;IAED,OAAOC,KAAK,CAACC,IAAI,CAACZ,MAAM,CAACa,MAAM,EAAE,CAAC,CAACC,GAAG,CAACC,KAAA,IAAe;MAAA,IAAd;QAAEC;MAAM,CAAE,GAAAD,KAAA;MAChD;;;QAGEE,UAAA,CAAAC,GAAA;UAEEC,SAAS,EAAEC,iBAAA,CAAAA,iBAAiB,CAC1B,wBAAwB,EACxBC,YAAA,WAAY,CAACC,MAAM,EACnB;YAAEH,SAAS,EAAEE,YAAA,WAAY,CAACE,MAAM;YAAEC,KAAK,EAAEpB,WAAW,KAAKY;UAAM,CAAE,CAClE;UACDS,OAAO,EAAEA,CAAA,KAAMhB,cAAc,CAACO,MAAM;QAAC,GANhCA,MAAM;MAOX;IAEN,CAAC,CAAC;;EAGJ;;AAEG;EACH,MAAMU,YAAY,GAAG;IACnB,aAAa,EAAEjC,KAAK;IACpB,oBAAoB,EAAEC;GACvB;EAED,OACEuB,UAAA,CAAAC,GAAA,OAAAS,MAAA,CAAAC,MAAA;IACET,SAAS,EAAEC,iBAAA,CAAAA,iBAAiB,CAC1B,yBAAyB,EACzBC,YAAA,WAAY,CAACQ,OAAO,CACrB;IACDC,KAAK,EACAH,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAjC,QAAQ,CACR,EAAA+B,YAAY;EAAA;IAAAK,QAAA,EAGhBvB,aAAa;EAAE,CACb;AAET;AAECjB,GAA+B,CAACyC,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}