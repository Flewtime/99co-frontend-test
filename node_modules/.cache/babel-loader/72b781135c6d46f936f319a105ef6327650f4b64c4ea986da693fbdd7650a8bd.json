{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar jsxRuntime = require('react/jsx-runtime');\nvar React = require('react');\nvar Autoplay = require('../../modules/Autoplay.js');\nvar IntervalTimer = require('../../modules/IntervalTimer.js');\nvar composeCssClasses = require('../../utils/composeCssClasses.js');\nvar index_module = require('./index.module.css.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar ButtonType;\n(function (ButtonType) {\n  ButtonType[\"PLAY\"] = \"play\";\n  ButtonType[\"PAUSE\"] = \"pause\";\n})(ButtonType || (ButtonType = {}));\nclass AutoplaySvg {\n  static getPath(buttonType) {\n    if (buttonType === ButtonType.PAUSE) return AutoplaySvg.pausePath;else return AutoplaySvg.playPath;\n  }\n}\nAutoplaySvg.playPath = 'M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z';\nAutoplaySvg.pausePath = 'M 12,26 16,26 16,10 12,10 z M 21,26 25,26 25,10 21,10 z';\nfunction AutoplayButton(props) {\n  const {\n    className,\n    style,\n    position = {\n      bottom: '0',\n      left: '0'\n    }\n  } = props;\n  const {\n    state: {\n      isPausedByUser\n    },\n    autoplayState,\n    resume,\n    pause\n  } = Autoplay.useAutoplay();\n  const [buttonType, setButtonType] = React__default[\"default\"].useState(autoplayState !== IntervalTimer.IntervalState.IDLE ? ButtonType.PAUSE : ButtonType.PLAY);\n  const onClickHandler = event => {\n    event.stopPropagation();\n    if (isPausedByUser) resume();else pause();\n  };\n  React__default[\"default\"].useEffect(() => {\n    if (isPausedByUser && autoplayState === IntervalTimer.IntervalState.IDLE) setButtonType(ButtonType.PLAY);else if (isPausedByUser && autoplayState === IntervalTimer.IntervalState.PAUSED) setButtonType(ButtonType.PLAY);else setButtonType(ButtonType.PAUSE);\n  }, [isPausedByUser, autoplayState]);\n  return jsxRuntime.jsx(\"button\", Object.assign({\n    \"data-testid\": \"hero-slider-autoplay-button\",\n    className: composeCssClasses.composeCssClasses('hero-slider-autoplay-button', index_module[\"default\"].Button, className),\n    onClick: onClickHandler,\n    style: Object.assign(Object.assign({}, position), style)\n  }, {\n    children: jsxRuntime.jsx(\"svg\", Object.assign({\n      fill: \"currentColor\",\n      height: \"100%\",\n      width: \"100%\",\n      viewBox: \"0 0 36 36\"\n    }, {\n      children: jsxRuntime.jsx(\"path\", {\n        d: AutoplaySvg.getPath(buttonType)\n      })\n    }))\n  }));\n}\nAutoplayButton.displayName = 'hero-slider/autoplay-button';\nexports.AutoplayButton = AutoplayButton;","map":{"version":3,"names":["ButtonType","AutoplaySvg","getPath","buttonType","PAUSE","pausePath","playPath","AutoplayButton","props","className","style","position","bottom","left","state","isPausedByUser","autoplayState","resume","pause","Autoplay","useAutoplay","setButtonType","React__default","useState","IntervalTimer","IntervalState","IDLE","PLAY","onClickHandler","event","stopPropagation","useEffect","PAUSED","jsxRuntime","jsx","Object","assign","composeCssClasses","index_module","Button","onClick","children","fill","height","width","viewBox","d","displayName"],"sources":["D:\\cv\\Website-Porto\\99co-frontend-test\\node_modules\\hero-slider\\src\\components\\AutoplayButton\\index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useAutoplay } from '../../modules/Autoplay';\nimport { IntervalState } from '../../modules/IntervalTimer';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\nimport { NavPosition } from '../Nav';\nimport AutoplayButtonModuleCss from './index.module.css';\n\nenum ButtonType {\n  PLAY = 'play',\n  PAUSE = 'pause'\n}\n\n/**\n * `AutoplayButton` component props.\n */\nexport interface AutoplayButtonProps {\n  /**\n   * CSS class name.\n   */\n  className?: React.HTMLAttributes<HTMLElement>['className'];\n  /**\n   * Object of CSS properties `top`, `left`, `bottom`, and `right` used to absolutely position elements.\n   * Aside from the former, you can also set the CSS `transform` property to help you center the element.\n   * @default\n   * {\n   *    bottom: '0',\n   *    left: '0'\n   * }\n   */\n  position?: NavPosition;\n  /**\n   * Inline CSS styling.\n   */\n  style?: React.CSSProperties;\n}\n\nclass AutoplaySvg {\n  private static readonly playPath =\n    'M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z';\n\n  private static readonly pausePath =\n    'M 12,26 16,26 16,10 12,10 z M 21,26 25,26 25,10 21,10 z';\n\n  public static getPath(buttonType: ButtonType): string {\n    if (buttonType === ButtonType.PAUSE) return AutoplaySvg.pausePath;\n    else return AutoplaySvg.playPath;\n  }\n}\n\nexport function AutoplayButton(props: AutoplayButtonProps) {\n  const {\n    className,\n    style,\n    position = {\n      bottom: '0',\n      left: '0'\n    }\n  } = props;\n\n  const {\n    state: { isPausedByUser },\n    autoplayState,\n    resume,\n    pause\n  } = useAutoplay();\n\n  const [buttonType, setButtonType] = React.useState<ButtonType>(\n    autoplayState !== IntervalState.IDLE ? ButtonType.PAUSE : ButtonType.PLAY\n  );\n\n  const onClickHandler = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.stopPropagation();\n    if (isPausedByUser) resume();\n    else pause();\n  };\n\n  React.useEffect(() => {\n    if (isPausedByUser && autoplayState === IntervalState.IDLE)\n      setButtonType(ButtonType.PLAY);\n    else if (isPausedByUser && autoplayState === IntervalState.PAUSED)\n      setButtonType(ButtonType.PLAY);\n    else setButtonType(ButtonType.PAUSE);\n  }, [isPausedByUser, autoplayState]);\n\n  return (\n    <button\n      data-testid=\"hero-slider-autoplay-button\"\n      className={composeCssClasses(\n        'hero-slider-autoplay-button',\n        AutoplayButtonModuleCss.Button,\n        className\n      )}\n      onClick={onClickHandler}\n      style={{\n        ...position,\n        ...style\n      }}\n    >\n      <svg fill=\"currentColor\" height=\"100%\" width=\"100%\" viewBox=\"0 0 36 36\">\n        <path d={AutoplaySvg.getPath(buttonType)} />\n      </svg>\n    </button>\n  );\n}\n\n(AutoplayButton as React.FunctionComponent).displayName =\n  'hero-slider/autoplay-button';\n"],"mappings":";;;;;;;;;;;;;;;;;AAQA,IAAKA,UAGJ;AAHD,WAAKA,UAAU;EACbA,UAAA,iBAAa;EACbA,UAAA,mBAAe;AACjB,CAAC,EAHIA,UAAU,KAAVA,UAAU,GAGd;AA0BD,MAAMC,WAAW;EAOR,OAAOC,OAAOA,CAACC,UAAsB;IAC1C,IAAIA,UAAU,KAAKH,UAAU,CAACI,KAAK,EAAE,OAAOH,WAAW,CAACI,SAAS,CAAC,KAC7D,OAAOJ,WAAW,CAACK,QAAQ;;;AARVL,WAAQ,CAAAK,QAAA,GAC9B,iEAAiE;AAE3CL,WAAS,CAAAI,SAAA,GAC/B,yDAAyD;AAQvD,SAAUE,cAAcA,CAACC,KAA0B;EACvD,MAAM;IACJC,SAAS;IACTC,KAAK;IACLC,QAAQ,GAAG;MACTC,MAAM,EAAE,GAAG;MACXC,IAAI,EAAE;;EACP,CACF,GAAGL,KAAK;EAET,MAAM;IACJM,KAAK,EAAE;MAAEC;IAAc,CAAE;IACzBC,aAAa;IACbC,MAAM;IACNC;EAAK,CACN,GAAGC,QAAA,CAAAC,WAAW,EAAE;EAEjB,MAAM,CAACjB,UAAU,EAAEkB,aAAa,CAAC,GAAGC,cAAA,WAAK,CAACC,QAAQ,CAChDP,aAAa,KAAKQ,aAAA,CAAAC,aAAa,CAACC,IAAI,GAAG1B,UAAU,CAACI,KAAK,GAAGJ,UAAU,CAAC2B,IAAI,CAC1E;EAED,MAAMC,cAAc,GAClBC,KAAsD,IACpD;IACFA,KAAK,CAACC,eAAe,EAAE;IACvB,IAAIf,cAAc,EAAEE,MAAM,EAAE,CAAC,KACxBC,KAAK,EAAE;EACd,CAAC;EAEDI,cAAA,WAAK,CAACS,SAAS,CAAC,MAAK;IACnB,IAAIhB,cAAc,IAAIC,aAAa,KAAKQ,aAAA,CAAAC,aAAa,CAACC,IAAI,EACxDL,aAAa,CAACrB,UAAU,CAAC2B,IAAI,CAAC,CAAC,KAC5B,IAAIZ,cAAc,IAAIC,aAAa,KAAKQ,aAAA,CAAAC,aAAa,CAACO,MAAM,EAC/DX,aAAa,CAACrB,UAAU,CAAC2B,IAAI,CAAC,CAAC,KAC5BN,aAAa,CAACrB,UAAU,CAACI,KAAK,CAAC;EACtC,CAAC,EAAE,CAACW,cAAc,EAAEC,aAAa,CAAC,CAAC;EAEnC,OACEiB,UAAA,CAAAC,GACc,WAAAC,MAAA,CAAAC,MAAA;IAAA,4CAA6B;IACzC3B,SAAS,EAAE4B,iBAAA,CAAAA,iBAAiB,CAC1B,6BAA6B,EAC7BC,YAAA,WAAuB,CAACC,MAAM,EAC9B9B,SAAS,CACV;IACD+B,OAAO,EAAEZ,cAAc;IACvBlB,KAAK,EACAyB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAzB,QAAQ,CACR,EAAAD,KAAK;EAGV;IAAA+B,QAAA,EAAAR,UAAA,CAAAC,GAAA,QAAAC,MAAA,CAAAC,MAAA;MAAKM,IAAI,EAAC,cAAc;MAACC,MAAM,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,OAAO,EAAC;IAAW,CACrE;MAAAJ,QAAA,EAAAR,UAAA,CAAAC,GAAA;QAAMY,CAAC,EAAE7C,WAAW,CAACC,OAAO,CAACC,UAAU;MAAC,CAAI;IAAA;EACxC,CACC;AAEb;AAECI,cAA0C,CAACwC,WAAW,GACrD,6BAA6B"},"metadata":{},"sourceType":"script","externalDependencies":[]}