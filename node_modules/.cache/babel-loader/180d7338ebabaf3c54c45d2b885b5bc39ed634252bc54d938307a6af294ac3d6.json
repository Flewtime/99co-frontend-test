{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar jsxRuntime = require('react/jsx-runtime');\nvar Controller = require('../../modules/Controller.js');\nvar Layout = require('../../modules/Layout.js');\nvar Manager = require('../../modules/Manager.js');\nvar composeCssClasses = require('../../utils/composeCssClasses.js');\nvar index = require('../Nav/index.js');\nvar index_module = require('./index.module.css.js');\nfunction MenuNav(props) {\n  const {\n    color,\n    activeColor,\n    position = {\n      bottom: '0',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    },\n    justifyContent = 'center',\n    mobileThreshold: componentMobileThreshold,\n    isNullAfterThreshold,\n    extraButton,\n    isExtraButtonRight = true\n  } = props;\n  const {\n    state: {\n      width\n    },\n    mobileThreshold\n  } = Layout.useLayout();\n  const {\n    state: {\n      slides,\n      totalSlides\n    }\n  } = Manager.useManager();\n  const {\n    state: {\n      activeSlide\n    },\n    changeSlide\n  } = Controller.useController();\n  if (Number(width) <= (componentMobileThreshold !== null && componentMobileThreshold !== void 0 ? componentMobileThreshold : mobileThreshold)) {\n    if (isNullAfterThreshold) return null;\n    return jsxRuntime.jsx(index.Nav, Object.assign({}, props));\n  }\n  function renderButtons() {\n    if (!totalSlides) return [];\n    const onClickHandler = slideNumber => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n    return Array.from(slides.values()).map((_ref, index) => {\n      let {\n        label,\n        number\n      } = _ref;\n      const description = label;\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        jsxRuntime.jsx(\"li\", Object.assign({\n          className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-button', index_module[\"default\"].Button, {\n            className: index_module[\"default\"].Active,\n            useIf: activeSlide === number\n          }),\n          onClick: () => onClickHandler(number)\n        }, {\n          children: jsxRuntime.jsxs(\"div\", Object.assign({\n            className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-button-description', index_module[\"default\"].Description)\n          }, {\n            children: [jsxRuntime.jsxs(\"div\", Object.assign({\n              className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-button-number', index_module[\"default\"].Number)\n            }, {\n              children: [number, jsxRuntime.jsx(\"span\", {\n                className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-button-square', index_module[\"default\"].Square)\n              })]\n            })), jsxRuntime.jsx(\"div\", Object.assign({\n              className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-button-text', index_module[\"default\"].Text)\n            }, {\n              children: description\n            }))]\n          }))\n        }), index)\n      );\n    });\n  }\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n  return jsxRuntime.jsxs(\"div\", Object.assign({\n    className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-wrapper', index_module[\"default\"].Wrapper),\n    style: Object.assign(Object.assign(Object.assign({}, position), CSSVariables), {\n      justifyContent\n    })\n  }, {\n    children: [extraButton && jsxRuntime.jsx(\"div\", Object.assign({\n      className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-extra', index_module[\"default\"].Extra),\n      style: {\n        order: isExtraButtonRight ? 1 : 0\n      }\n    }, {\n      children: jsxRuntime.jsx(\"span\", Object.assign({\n        className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-extra-button', index_module[\"default\"].ExtraButton),\n        style: {\n          borderLeft: isExtraButtonRight ? '1px solid var(--nav-color, rgba(215, 225, 235, 0.6))' : undefined,\n          borderRight: !isExtraButtonRight ? '1px solid var(--nav-color, rgba(215, 225, 235, 0.6))' : undefined\n        }\n      }, {\n        children: extraButton\n      }))\n    })), jsxRuntime.jsxs(\"ul\", Object.assign({\n      className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-container', index_module[\"default\"].Container)\n    }, {\n      children: [renderButtons(), jsxRuntime.jsx(\"span\", {\n        className: composeCssClasses.composeCssClasses('hero-slider-menu-nav-bar', index_module[\"default\"].Bar),\n        style: {\n          width: \"\".concat(100 / totalSlides, \"%\"),\n          transform: \"translate3d(\".concat(activeSlide - 1, \"00%, 0, 0)\")\n        }\n      })]\n    }))]\n  }));\n}\nMenuNav.displayName = 'hero-slider/menu-nav';\nexports.MenuNav = MenuNav;","map":{"version":3,"names":["MenuNav","props","color","activeColor","position","bottom","left","transform","justifyContent","mobileThreshold","componentMobileThreshold","isNullAfterThreshold","extraButton","isExtraButtonRight","state","width","Layout","useLayout","slides","totalSlides","Manager","useManager","activeSlide","changeSlide","Controller","useController","Number","jsxRuntime","jsx","index","Nav","Object","assign","renderButtons","onClickHandler","slideNumber","Array","from","values","map","_ref","label","number","description","className","composeCssClasses","index_module","Button","Active","useIf","onClick","children","jsxs","Description","Square","Text","CSSVariables","Wrapper","style","Extra","order","ExtraButton","borderLeft","undefined","borderRight","Container","Bar","concat","displayName"],"sources":["D:\\cv\\Website-Porto\\99co-frontend-test\\node_modules\\hero-slider\\src\\components\\MenuNav\\index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useController } from '../../modules/Controller';\nimport { useLayout } from '../../modules/Layout';\nimport { useManager } from '../../modules/Manager';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\nimport { Nav, NavProps } from '../Nav';\nimport MenuNavModuleCss from './index.module.css';\n\n/**\n * `MenuNav` component props.\n */\nexport interface MenuNavProps extends NavProps {\n  /**\n   * Determines how the browser distributes space between and around nav items along the component.\n   */\n  justifyContent?: React.CSSProperties['justifyContent'];\n  /**\n   * Given the nature of this component, it doesn't work well with devices of relatively small width.\n   * The mobile threshold is the point in which this component turns into a basic `Nav` component or `null`.\n   */\n  mobileThreshold?: number;\n  /**\n   * Determines if the nav should render `null` or a basic `Nav` component after the threshold is reached.\n   * @default false\n   */\n  isNullAfterThreshold?: boolean;\n  /**\n   * An extra button rendered among the nav items in case the developer may want any extra functionality in the component.\n   */\n  extraButton?: React.ReactNode;\n  /**\n   * Renders the button to the right side of the nav if true, otherwise it will appear at the left side.\n   * @default true\n   */\n  isExtraButtonRight?: boolean;\n}\n\nexport function MenuNav(props: MenuNavProps) {\n  const {\n    color,\n    activeColor,\n    position = {\n      bottom: '0',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    },\n    justifyContent = 'center',\n    mobileThreshold: componentMobileThreshold,\n    isNullAfterThreshold,\n    extraButton,\n    isExtraButtonRight = true\n  } = props;\n\n  const {\n    state: { width },\n    mobileThreshold\n  } = useLayout();\n\n  const {\n    state: { slides, totalSlides }\n  } = useManager();\n\n  const {\n    state: { activeSlide },\n    changeSlide\n  } = useController();\n\n  if (Number(width) <= (componentMobileThreshold ?? mobileThreshold)) {\n    if (isNullAfterThreshold) return null;\n    return <Nav {...props} />;\n  }\n\n  function renderButtons() {\n    if (!totalSlides) return [];\n\n    const onClickHandler = (slideNumber: number) => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n\n    return Array.from(slides.values()).map(({ label, number }, index) => {\n      const description = label;\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        <li\n          key={index}\n          className={composeCssClasses(\n            'hero-slider-menu-nav-button',\n            MenuNavModuleCss.Button,\n            {\n              className: MenuNavModuleCss.Active,\n              useIf: activeSlide === number\n            }\n          )}\n          onClick={() => onClickHandler(number)}\n        >\n          <div\n            className={composeCssClasses(\n              'hero-slider-menu-nav-button-description',\n              MenuNavModuleCss.Description\n            )}\n          >\n            <div\n              className={composeCssClasses(\n                'hero-slider-menu-nav-button-number',\n                MenuNavModuleCss.Number\n              )}\n            >\n              {number}\n              <span\n                className={composeCssClasses(\n                  'hero-slider-menu-nav-button-square',\n                  MenuNavModuleCss.Square\n                )}\n              />\n            </div>\n            <div\n              className={composeCssClasses(\n                'hero-slider-menu-nav-button-text',\n                MenuNavModuleCss.Text\n              )}\n            >\n              {description}\n            </div>\n          </div>\n        </li>\n      );\n    });\n  }\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n\n  return (\n    <div\n      className={composeCssClasses(\n        'hero-slider-menu-nav-wrapper',\n        MenuNavModuleCss.Wrapper\n      )}\n      style={{\n        ...position,\n        ...CSSVariables,\n        justifyContent\n      }}\n    >\n      {extraButton && (\n        <div\n          className={composeCssClasses(\n            'hero-slider-menu-nav-extra',\n            MenuNavModuleCss.Extra\n          )}\n          style={{\n            order: isExtraButtonRight ? 1 : 0\n          }}\n        >\n          <span\n            className={composeCssClasses(\n              'hero-slider-menu-nav-extra-button',\n              MenuNavModuleCss.ExtraButton\n            )}\n            style={{\n              borderLeft: isExtraButtonRight\n                ? '1px solid var(--nav-color, rgba(215, 225, 235, 0.6))'\n                : undefined,\n              borderRight: !isExtraButtonRight\n                ? '1px solid var(--nav-color, rgba(215, 225, 235, 0.6))'\n                : undefined\n            }}\n          >\n            {extraButton}\n          </span>\n        </div>\n      )}\n      <ul\n        className={composeCssClasses(\n          'hero-slider-menu-nav-container',\n          MenuNavModuleCss.Container\n        )}\n      >\n        {renderButtons()}\n        <span\n          className={composeCssClasses(\n            'hero-slider-menu-nav-bar',\n            MenuNavModuleCss.Bar\n          )}\n          style={{\n            width: `${100 / totalSlides}%`,\n            transform: `translate3d(${activeSlide - 1}00%, 0, 0)`\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\n(MenuNav as React.FunctionComponent).displayName = 'hero-slider/menu-nav';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}